package com.example.dblearning.fragments.add

import android.os.Bundle
import android.text.Editable
import android.text.TextUtils
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.fragment.findNavController
import com.example.dblearning.R
import com.example.dblearning.data.User
import com.example.dblearning.data.UserViewModel
import com.example.dblearning.databinding.FragmentAddBinding
import org.w3c.dom.Text

class AddFragment : Fragment() {

    private lateinit var binding: FragmentAddBinding
    private lateinit var mUserViewModel: UserViewModel

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        binding = FragmentAddBinding.inflate(layoutInflater)

        mUserViewModel = ViewModelProvider(this).get(UserViewModel::class.java)

        binding.addButton.setOnClickListener {
            insertDataToDatabase()
        }
        return binding.root
    }

    private fun insertDataToDatabase() {
        val firstName = binding.editTextFirstname.text.toString()
        val lastName = binding.editTextLastName.text.toString()
        // int из edittext возвращается как Editable
        val age = binding.editTextAge.text

        if(inputCheck(firstName, lastName, age)) {
            // Create User Object, Id is pk and autogenerated
            val user = User(id = 0, firstName, lastName, Integer.parseInt(age.toString()))
            // Add Data to Database
            mUserViewModel.addUser(user)
            Toast.makeText(requireContext(), "Successfully added!", Toast.LENGTH_LONG).show()
            // Navigate Back
            findNavController().navigate(R.id.action_addFragment_to_listFragment)
        }else{
            Toast.makeText(requireContext(), "Invalid fields.", Toast.LENGTH_LONG).show()
        }
    }

    private fun inputCheck(firstName: String, lastName: String, age: Editable) : Boolean {
        return (!TextUtils.isEmpty(firstName)
                && !TextUtils.isDigitsOnly(firstName)
                && !TextUtils.isEmpty(lastName)
                && !TextUtils.isDigitsOnly(lastName)
                && age.isNotEmpty())
    }

}